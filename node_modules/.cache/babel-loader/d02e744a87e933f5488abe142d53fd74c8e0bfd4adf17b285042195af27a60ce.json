{"ast":null,"code":"export const categoryConverter = {\n  toFirestore: category => {\n    return {\n      title: cetegory.title\n    };\n  },\n  fromFirestore: snapshot => {\n    const data = snapshot.data();\n    const obj = Object.assign({\n      id: snapshot.id\n    }, data);\n    return obj;\n  }\n};\nexport const optionConverter = {\n  toFirestore: () => {\n    // let obj = {\n    //     title: option.title,\n    //     isChoices: option.isChoices,\n    //     choices: option.choices\n    // };\n    // return data;\n    return {};\n  },\n  fromFirestore: snapshot => {\n    const data = snapshot.data();\n    const obj = Object.assign({\n      id: snapshot.id\n    }, data);\n    if (!obj.isChoices) delete obj.choices;\n    return obj;\n  }\n};","map":{"version":3,"names":["categoryConverter","toFirestore","category","title","cetegory","fromFirestore","snapshot","data","obj","Object","assign","id","optionConverter","isChoices","choices"],"sources":["/Users/HenryTsui/Desktop/rizzy-bodycraft-record/src/type.ts"],"sourcesContent":["import { QueryDocumentSnapshot } from \"firebase/firestore\";\n\nexport type PendingApplcation = {\n    id: string,\n    name: string,\n    email: string\n    // apply_date:\n}\n\nexport type Option = {\n    id: string,\n    title: string,\n    isChoices: boolean,\n    choices?: Array<string>\n}\nexport type Category = {\n    title: string\n}\n\nexport const categoryConverter = {\n    toFirestore: (category: Category) => { return { title: cetegory.title } },\n    fromFirestore: (snapshot: QueryDocumentSnapshot): Category => {\n        type subCategory = {\n            title: string;\n        }\n        const data = snapshot.data() as subCategory;\n        const obj = Object.assign({ id: snapshot.id }, data);\n        return obj;\n    }\n}\n\nexport const optionConverter = {\n    toFirestore: () => {\n        // let obj = {\n        //     title: option.title,\n        //     isChoices: option.isChoices,\n        //     choices: option.choices\n        // };\n        // return data;\n        return {}\n    },\n    fromFirestore: (snapshot: QueryDocumentSnapshot): Option => {\n        type subOption = {\n            title: string,\n            isChoices: boolean,\n            choices?: Array<string>\n        }\n        const data = snapshot.data() as subOption;\n        const obj = Object.assign({ id: snapshot.id }, data);\n        if (!obj.isChoices) delete obj.choices;\n        return obj;\n    }\n}\n"],"mappings":"AAmBA,OAAO,MAAMA,iBAAiB,GAAG;EAC7BC,WAAW,EAAGC,QAAkB,IAAK;IAAE,OAAO;MAAEC,KAAK,EAAEC,QAAQ,CAACD;IAAM,CAAC;EAAC,CAAC;EACzEE,aAAa,EAAGC,QAA+B,IAAe;IAI1D,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI,EAAiB;IAC3C,MAAMC,GAAG,GAAGC,MAAM,CAACC,MAAM,CAAC;MAAEC,EAAE,EAAEL,QAAQ,CAACK;IAAG,CAAC,EAAEJ,IAAI,CAAC;IACpD,OAAOC,GAAG;EACd;AACJ,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG;EAC3BX,WAAW,EAAE,MAAM;IACf;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,CAAC;EACb,CAAC;EACDI,aAAa,EAAGC,QAA+B,IAAa;IAMxD,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI,EAAe;IACzC,MAAMC,GAAG,GAAGC,MAAM,CAACC,MAAM,CAAC;MAAEC,EAAE,EAAEL,QAAQ,CAACK;IAAG,CAAC,EAAEJ,IAAI,CAAC;IACpD,IAAI,CAACC,GAAG,CAACK,SAAS,EAAE,OAAOL,GAAG,CAACM,OAAO;IACtC,OAAON,GAAG;EACd;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}