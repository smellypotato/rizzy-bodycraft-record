{"ast":null,"code":"var _jsxFileName = \"/Users/HenryTsui/Desktop/rizzy-bodycraft-record/src/pages/Admin/Categories/Categories.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { DropdownMenu } from \"../../../components/DropdownMenu/DropdownMenu\";\nimport { Title } from \"../../../components/Title/Title\";\nimport Firebase from \"../../../firebase\";\nimport \"./Categories.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Categories = () => {\n  _s();\n  var _categories$find;\n  const [categories, setCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState();\n  const [activeDropdown, setActiveDropdown] = useState();\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    let closeDropdown = () => {\n      console.log(\"close dropdown\");\n      setActiveDropdown(undefined);\n    };\n    window.addEventListener(\"click\", closeDropdown);\n    return () => window.removeEventListener(\"click\", closeDropdown);\n  }, []);\n  useEffect(() => {\n    Firebase.instance.getCategories().then(categories => setCategories(categories.map(category => {\n      return {\n        label: category.title,\n        id: category.id\n      };\n    })));\n  }, []);\n  useEffect(() => {\n    if (categoryId) Firebase.instance.getOptions(categoryId).then(options => setOptions(options));\n  }, [categoryId]);\n\n  // const optionRow = useCallback((details) => {\n  //     return (\n  //         <div className=\"option\">\n  //             <button className=\"delete\" />\n  //             <input value={ details.title } onChange={ () => {} } />\n  //             <DropdownMenu onSelect={ () => {} } opened={ activeDropdown === details.id } onOpen={ () => setActiveDropdown(details.id) } onClose={ () => setActiveDropdown(undefined) } default={ \"顯示所有選項\" } current={ \"\" } choices={ details.choices } allowAdd />\n  //         </div>\n  //     )\n  // }, [options]);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"categories\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"categories-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(DropdownMenu, {\n        onSelect: setCategoryId,\n        opened: activeDropdown === \"category\",\n        onOpen: () => setActiveDropdown(\"category\"),\n        onClose: () => setActiveDropdown(undefined),\n        default: \"選擇分類\",\n        current: (_categories$find = categories.find(cat => cat.id === categoryId)) === null || _categories$find === void 0 ? void 0 : _categories$find.label,\n        choices: categories,\n        allowAdd: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Categories, \"upJXYRXjz4vJ09HCL6NNm8nNMz0=\");\n_c = Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["useEffect","useState","DropdownMenu","Title","Firebase","Categories","categories","setCategories","categoryId","setCategoryId","activeDropdown","setActiveDropdown","options","setOptions","closeDropdown","console","log","undefined","window","addEventListener","removeEventListener","instance","getCategories","then","map","category","label","title","id","getOptions","find","cat"],"sources":["/Users/HenryTsui/Desktop/rizzy-bodycraft-record/src/pages/Admin/Categories/Categories.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { DropdownMenu } from \"../../../components/DropdownMenu/DropdownMenu\";\nimport { Title } from \"../../../components/Title/Title\";\nimport Firebase from \"../../../firebase\";\nimport \"./Categories.css\";\nimport { Option } from \"../../../type\";\nexport const Categories = () => {\n\n    const [categories, setCategories] = useState<Array<{ label: string, id: string }>>([]);\n    const [categoryId, setCategoryId] = useState<string>();\n    const [activeDropdown, setActiveDropdown] = useState<string>();\n    const [options, setOptions] = useState<Array<Option>>([]);\n\n    useEffect(() => {\n        let closeDropdown = () => {\n            console.log(\"close dropdown\");\n            setActiveDropdown(undefined)\n        };\n        window.addEventListener(\"click\", closeDropdown);\n\n        return () => window.removeEventListener(\"click\", closeDropdown);\n    }, [])\n\n    useEffect(() => {\n        Firebase.instance.getCategories().then(categories =>\n            setCategories(categories.map(category => {\n                return { label: category.title, id: category.id }\n            }))\n        );\n    }, [])\n\n    useEffect(() => {\n        if (categoryId) Firebase.instance.getOptions(categoryId).then(options => setOptions(options));\n    }, [categoryId]);\n\n    // const optionRow = useCallback((details) => {\n    //     return (\n    //         <div className=\"option\">\n    //             <button className=\"delete\" />\n    //             <input value={ details.title } onChange={ () => {} } />\n    //             <DropdownMenu onSelect={ () => {} } opened={ activeDropdown === details.id } onOpen={ () => setActiveDropdown(details.id) } onClose={ () => setActiveDropdown(undefined) } default={ \"顯示所有選項\" } current={ \"\" } choices={ details.choices } allowAdd />\n    //         </div>\n    //     )\n    // }, [options]);\n\n    return (\n        <main id=\"categories\">\n            <Title />\n            <div id=\"categories-dropdown\">\n                <DropdownMenu onSelect={ setCategoryId } opened={ activeDropdown === \"category\"} onOpen={ () => setActiveDropdown(\"category\") } onClose={ () => setActiveDropdown(undefined) } default={ \"選擇分類\" } current={ categories.find(cat => cat.id === categoryId)?.label } choices={ categories } allowAdd />\n            </div>\n\n        </main>\n    )\n}\n"],"mappings":";;AAAA,SAAsBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,YAAY,QAAQ,+CAA+C;AAC5E,SAASC,KAAK,QAAQ,iCAAiC;AACvD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAO,kBAAkB;AAAC;AAE1B,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAAA;EAE5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAuC,EAAE,CAAC;EACtF,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,EAAU;EACtD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,EAAU;EAC9D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAgB,EAAE,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACZ,IAAIc,aAAa,GAAG,MAAM;MACtBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7BL,iBAAiB,CAACM,SAAS,CAAC;IAChC,CAAC;IACDC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEL,aAAa,CAAC;IAE/C,OAAO,MAAMI,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEN,aAAa,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACZI,QAAQ,CAACiB,QAAQ,CAACC,aAAa,EAAE,CAACC,IAAI,CAACjB,UAAU,IAC7CC,aAAa,CAACD,UAAU,CAACkB,GAAG,CAACC,QAAQ,IAAI;MACrC,OAAO;QAAEC,KAAK,EAAED,QAAQ,CAACE,KAAK;QAAEC,EAAE,EAAEH,QAAQ,CAACG;MAAG,CAAC;IACrD,CAAC,CAAC,CAAC,CACN;EACL,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACZ,IAAIQ,UAAU,EAAEJ,QAAQ,CAACiB,QAAQ,CAACQ,UAAU,CAACrB,UAAU,CAAC,CAACe,IAAI,CAACX,OAAO,IAAIC,UAAU,CAACD,OAAO,CAAC,CAAC;EACjG,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAM,EAAE,EAAC,YAAY;IAAA,wBACjB,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACT;MAAK,EAAE,EAAC,qBAAqB;MAAA,uBACzB,QAAC,YAAY;QAAC,QAAQ,EAAGC,aAAe;QAAC,MAAM,EAAGC,cAAc,KAAK,UAAW;QAAC,MAAM,EAAG,MAAMC,iBAAiB,CAAC,UAAU,CAAG;QAAC,OAAO,EAAG,MAAMA,iBAAiB,CAACM,SAAS,CAAG;QAAC,OAAO,EAAG,MAAQ;QAAC,OAAO,sBAAGX,UAAU,CAACwB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACH,EAAE,KAAKpB,UAAU,CAAC,qDAA7C,iBAA+CkB,KAAO;QAAC,OAAO,EAAGpB,UAAY;QAAC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACnS;EAAA;IAAA;IAAA;IAAA;EAAA,QAEH;AAEf,CAAC;AAAA,GAhDYD,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}