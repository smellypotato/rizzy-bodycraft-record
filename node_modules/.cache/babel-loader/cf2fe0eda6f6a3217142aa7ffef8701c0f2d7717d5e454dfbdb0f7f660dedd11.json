{"ast":null,"code":"var _jsxFileName = \"/Users/HenryTsui/Desktop/rizzy-bodycraft-record/src/components/ExerciseRecord/ExerciseRecord.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Utils } from '../../Utils';\nimport './ExerciseRecord.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MONTH;\n(function (MONTH) {\n  MONTH[MONTH[\"JAN\"] = 0] = \"JAN\";\n  MONTH[MONTH[\"FEB\"] = 1] = \"FEB\";\n  MONTH[MONTH[\"MAR\"] = 2] = \"MAR\";\n  MONTH[MONTH[\"APR\"] = 3] = \"APR\";\n  MONTH[MONTH[\"MAY\"] = 4] = \"MAY\";\n  MONTH[MONTH[\"JUN\"] = 5] = \"JUN\";\n  MONTH[MONTH[\"JUL\"] = 6] = \"JUL\";\n  MONTH[MONTH[\"AUG\"] = 7] = \"AUG\";\n  MONTH[MONTH[\"SEP\"] = 8] = \"SEP\";\n  MONTH[MONTH[\"OCT\"] = 9] = \"OCT\";\n  MONTH[MONTH[\"NOV\"] = 10] = \"NOV\";\n  MONTH[MONTH[\"DEC\"] = 11] = \"DEC\";\n})(MONTH || (MONTH = {}));\nexport const ExerciseRecord = props => {\n  _s();\n  const [weeks] = useState(Utils.newArray(12).map(month => Utils.weeksInMonth(props.currentYear, month) - (month !== MONTH.JAN && new Date(props.currentYear, month, 1).getDay() !== 0 ? 1 : 0)));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"exercise_record\",\n    title: \" Your work\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your work in \", props.currentYear]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"record_table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"days\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Wed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"months\",\n        children: weeks.map((noOfWeeks, month) => {\n          let previousWeeks = weeks.slice(0, month).reduce((totalWeeks, currentWeeks) => totalWeeks + currentWeeks, 0);\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              gridColumn: `${previousWeeks + 1} / ${previousWeeks + noOfWeeks}`\n            },\n            children: MONTH[month].toLowerCase()\n          }, MONTH[month], false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 40\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dates\",\n        children: [Utils.newArray(new Date(props.currentYear, 0, 1).getDay()).map(val => /*#__PURE__*/_jsxDEV(\"div\", {}, val, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 95\n        }, this)), Utils.newArray(Utils.daysInYear(props.currentYear)).map(dayInYear => {\n          let date = new Date(new Date(props.currentYear, 0).setDate(dayInYear + 1));\n          let dayInMonth = date.getDate();\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"record_cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tooltip_date\",\n              children: `${dayInMonth}/${date.getMonth() + 1}/${date.getFullYear()}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this)\n          }, dayInYear, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ExerciseRecord, \"AjXGI82pNNA3C/0CRGwJFbyeN4k=\");\n_c = ExerciseRecord;\nvar _c;\n$RefreshReg$(_c, \"ExerciseRecord\");","map":{"version":3,"names":["useState","Utils","MONTH","ExerciseRecord","props","weeks","newArray","map","month","weeksInMonth","currentYear","JAN","Date","getDay","noOfWeeks","previousWeeks","slice","reduce","totalWeeks","currentWeeks","gridColumn","toLowerCase","val","daysInYear","dayInYear","date","setDate","dayInMonth","getDate","getMonth","getFullYear"],"sources":["/Users/HenryTsui/Desktop/rizzy-bodycraft-record/src/components/ExerciseRecord/ExerciseRecord.tsx"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { Utils } from '../../Utils';\nimport './ExerciseRecord.css';\n\nenum MONTH {\n    JAN = 0,\n    FEB,\n    MAR,\n    APR,\n    MAY,\n    JUN,\n    JUL,\n    AUG,\n    SEP,\n    OCT,\n    NOV,\n    DEC\n}\n\nexport const ExerciseRecord = (props: { currentYear: number }) => {\n\n    const [weeks] = useState(Utils.newArray(12).map((month) => Utils.weeksInMonth(props.currentYear, month) - (month !== MONTH.JAN && new Date(props.currentYear, month, 1).getDay() !== 0 ? 1 : 0)));\n\n    return (\n        <section id=\"exercise_record\" title=\" Your work\">\n            <h3>Your work in { props.currentYear }</h3>\n\n            <section id=\"record_table\">\n                <div id=\"days\">\n                    <label></label>\n                    <label>Sun</label>\n                    <label></label>\n                    <label></label>\n                    <label>Wed</label>\n                    <label></label>\n                    <label></label>\n                    <label>Sat</label>\n                </div>\n                <div id=\"months\">\n                    {\n                        weeks.map((noOfWeeks, month) =>\n                            {\n                                let previousWeeks = weeks.slice(0, month).reduce((totalWeeks, currentWeeks) => totalWeeks + currentWeeks, 0);\n                                return <label key={ MONTH[month] } style={ { gridColumn: `${previousWeeks + 1} / ${previousWeeks + noOfWeeks}` } }>{ MONTH[month].toLowerCase() }</label>\n                            }\n                        )\n                    }\n                </div>\n                <div id=\"dates\">\n                    { Utils.newArray(new Date(props.currentYear, 0, 1).getDay()).map((val) => <div key={ val }/>) }\n                    {\n                        Utils.newArray(Utils.daysInYear(props.currentYear)).map(dayInYear => {\n                            let date = new Date(new Date(props.currentYear, 0).setDate(dayInYear + 1));\n                            let dayInMonth = date.getDate();\n                            return (\n                                <div className=\"record_cell\" key={ dayInYear }>\n                                    <div className=\"tooltip_date\">{ `${dayInMonth}/${date.getMonth() + 1}/${date.getFullYear()}` }</div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </section>\n        </section>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}